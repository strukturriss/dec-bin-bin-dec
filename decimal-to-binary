
function decBin (dec) {
  var targetArr = [];
  var tempArr = [];
  
  for (i=0; i <= Math.log2(dec); i++) {
    tempArr.push(Math.pow(2,i));
  }
  
  function recursive(x,j) {
    targetArr.push(tempArr[tempArr.length-j]);
    var interim = x-tempArr[tempArr.length-j];
    if (interim > 0 && (interim-tempArr[tempArr.length-(j+1)] > 0)) {
      j++;
      recursive(interim,j);
    } else if (interim > 0 && (interim-tempArr[tempArr.length-(j+1)] <= 0)) {
      targetArr.push(0);
      j+=2;
      recursive(interim,j);
    }
  }
  
  recursive(dec,1);
  
  targetArr = targetArr.map(function binarying(zeroOne) {
    if (zeroOne > 0) {
      return 1;
    } else {
      return 0;
    }
  });
  
  return targetArr.join("");
}

decBin (128);
